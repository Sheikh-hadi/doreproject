(e = this.resume) == null || e.call(this)}initializeListeners(){ ht(nt.CHANGE_SCENE, this.onChangeSceneFn), ht(nt.TOGGLE_MENU, this.onToggleMenuFn), ht(nt.TOGGLE_CONTENT, this.onToggleMenuFn) } onToggleMenu(e){ setTimeout(() => { var n; (n = this.renderer) == null || n.changeScene(e.toggle ? 1 : -1, !0) }, e.toggle ? 0 : 10) } onChangeScene(e){ var n, i; (i = (n = this.renderer) == null ? void 0 : n.changeScene) == null || i.call(n, e.direction) } resize(){ var e, n, i, r; (n = (e = this.view) == null ? void 0 : e.resize) == null || n.call(e), (r = (i = this.renderer) == null ? void 0 : i.resize) == null || r.call(i) } render(e){ var n, i, r, s, o, a; (i = (n = this.state) == null ? void 0 : n.render) == null || i.call(n, e), (s = (r = this.view) == null ? void 0 : r.render) == null || s.call(r, e), (a = (o = this.renderer) == null ? void 0 : o.render) == null || a.call(o, e) }}const fJ = Vt({ __name: "root", setup(t) { const e = si(), { locale: n } = Ws(), i = new cJ, r = xe(!1), s = xe(), o = xe(!1), a = uG(() => { i.resize() }, 120), u = async () => { o.value = !1 }; return yn(async () => { const { isHome: c } = ur(); await e.loadData(n.value), i.preload().then(async () => { var f; if ((f = s.value) == null || f.appendChild(i.renderer.instance.domElement), r.value = !0, hG(s, a), Nt(nt.APPLICATION_LOADED), c()) o.value = !0, ht(nt.APPLICATION_ENTER, u); else { const { waitTime: l } = ur(); await l(300), Nt(nt.APPLICATION_ENTER, !0) } }) }), (c, f) => { const l = _B, d = dK; return tt(), kt(Mn, null, [Ae("div", { ref_key: "$root", ref: s, id: "root" }, null, 512), Ke(ks, { name: "fade" }, { default: Nn(() => [Le(r) ? mo("", !0) : (tt(), Rn(l, { key: 0 }))]), _: 1 }), Ke(ks, { name: "fade" }, { default: Nn(() => [Le(o) ? (tt(), Rn(d, { key: 0 })) : mo("", !0)]), _: 1 })], 64) } } }), dJ = rm("/images/noise.svg"), hJ = {}, pJ = t => (zd("data-v-f0b66f1e"), t = t(), Vd(), t), mJ = { id: "noise" }, _J = pJ(() => Ae("div", { id: "noise__content" }, [Ae("img", { src: dJ })], -1)), gJ = [_J]; function vJ(t, e) { return tt(), kt("div", mJ, gJ) } const xJ = Dr(hJ, [["render", vJ], ["__scopeId", "data-v-f0b66f1e"]]), yJ = ["data-flip"], bJ = nm('<div class="butterfly"><div class="wing"><div class="bit"></div><div class="bit"></div></div><div class="wing"><div class="bit"></div><div class="bit"></div></div></div>', 1), EJ = [bJ], TJ = Vt({ __name: "butterfly", props: { color1: {}, color2: {}, scale: {}, flip: { type: Boolean } }, setup(t) { const { color1: e, color2: n, scale: i, flip: r } = t, { getRandom: s } = ur(), o = xe(), a = Ye.timeline({ delay: s(1, 5), paused: !1, onComplete: () => { Kv(() => { o.value && (Ye.set(o.value.querySelectorAll(".bit"), { backgroundColor: Math.random() > .5 ? e : n }), a.progress(0), a.play()) }, s(3e3, 6e3)) } }), u = () => { if (!o.value) return; const { getRandom: c } = ur(); Ye.set(o.value, { scale: i, opacity: 0, x: r ? `${c(-10, 20)}vw` : `${c(90, 120)}vw`, y: `${c(90, 100)}vh`, rotation: c(-10, 10) }), Ye.set(o.value.querySelectorAll(".bit"), { backgroundColor: Math.random() > .5 ? e : n }); const f = c(1.85, 3.5); a.to(o.value, { duration: .5, opacity: 1 }), a.to(o.value, { duration: f, ease: "power1.out", motionPath: { curviness: 1, path: [{ x: `${c(40, 60)}vw`, y: `${c(40, 60)}vh` }, { x: r ? `${c(110, 100)}vw` : `${c(-20, -10)}vw`, y: `${c(10, 80)}vh` }] } }, "<"), a.to(o.value, { duration: .5, ease: "none", opacity: 0 }, "-=.5") }; return yn(() => { u() }), (c, f) => (tt(), kt("div", { ref_key: "$butterfly", ref: o, class: "b", "data-flip": c.flip }, EJ, 8, yJ)) } }), SJ = {}, CJ = { id: "butterflies" }; function AJ(t, e) { const n = TJ; return tt(), kt("div", CJ, [Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .35 }), Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .25 }), Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .45 }), Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .35, flip: "" }), Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .25, flip: "" }), Ke(n, { color1: "#e381a8", color2: "#805cb7", scale: .45, flip: "" })]) } const wJ = Dr(SJ, [["render", AJ], ["__scopeId", "data-v-23ff9692"]]), MJ = ["data-switched"], DJ = Vt({ __name: "language-switcher", setup(t) { const { locale: e } = Ws(), n = xe(!1), i = e.value === "fr" ? ["EN", "FR"] : ["FR", "EN"]; return vn(n, () => { const s = `/${n.value ? i[0].toLowerCase() : i[1].toLowerCase()}`; history.pushState({}, "", s), window.location.reload() }), (r, s) => { const o = sh; return tt(), Rn(o, { active: "" }, { default: Nn(() => [Ae("div", { id: "language-switcher", "data-switched": Le(n), onClick: s[0] || (s[0] = a => n.value = !Le(n)) }, [Ae("small", null, Nu(Le(n) ? Le(i)[0] : Le(i)[1]), 1)], 8, MJ)]), _: 1 }) } } }), RJ = Dr(DJ, [["__scopeId", "data-v-74be8a3e"]]), PJ = ["data-active"], LJ = { id: "menu--close" }, IJ = Vt({ __name: "menu", setup(t) { const e = si(), n = xe(), i = xe(), r = xe(), s = xe(), o = xe(), a = xe(), u = Ye.timeline({ paused: !0 }), c = Ye.timeline({ paused: !0 }), f = xe(!0), l = xe(!1), d = () => { if (!i.value || !r.value || !n.value || !s.value || !o.value || !a.value) return; const x = i.value.getTotalLength(); Ye.set(i.value, { strokeDasharray: `${x} ${x}`, strokeDashoffset: x - (x - 90) }), Ye.set(r.value, { x: "-50%" }), u.to(i.value, { duration: .85, ease: Zt.IN_OUT, strokeDashoffset: 0, fillOpacity: .35 }), u.to(n.value, { duration: .85, ease: Zt.IN_OUT, scale: .85 }, "<"), u.to(r.value, { duration: .85, ease: Zt.IN_OUT, color: "#8811d1", x: "0%" }, "<"), Ye.set(o.value, { rotate: 45, x: -10, y: -10, opacity: 0 }), Ye.set(a.value, { rotate: -45, x: -10, y: 10, opacity: 0 }), c.to(s.value, { duration: .5, ease: Zt.IN_OUT, y: "-100%", autoAlpha: 0 }), c.to([o.value, a.value], { duration: .5, ease: Zt.IN_OUT, y: 0, x: 0, autoAlpha: 1 }) }, h = x => { x && u.play(), !x && u.reverse(), Nt(x ? Xn.MOUSEENTER : Xn.MOUSELEAVE) }, p = async () => { Nt(Cn.DISPATCH_PARTICLE), f.value = !1, l.value = !l.value, c[l.value ? "play" : "reverse"](), l.value ? Nt(Cn.TOGGLE_PAGE_CANVAS, { toggle: !1 }) : (e.content = !1, setTimeout(() => { Nt(nt.NAVIGATE, Kt.HOME) }, 1e3 * St.TRANSITION_DURATION / 2)), Nt(nt.TOGGLE_MENU, { toggle: l.value }) }, m = () => { f.value = !1 }, _ = () => { f.value = !0 }, g = x => { x.forced && (f.value = !1, l.value = x.toggle, c[x.toggle ? "play" : "reverse"]()) }; return vn(l, () => { Kv(() => { e.render = !l.value }, l.value ? 1e3 : 0) }), yn(() => { d(), ht(nt.CHANGE_SCENE, m), ht(nt.CHANGE_SCENE_COMPLETED, _), ht(nt.TOGGLE_MENU, g), ht(nt.TOGGLE_CONTENT, g) }), (x, v) => { const y = sh; return tt(), Rn(y, { active: Le(f) }, { default: Nn(() => [Ae("div", { id: "menu", "data-active": Le(f), onMouseenter: v[0] || (v[0] = ei(() => h(!0), ["prevent"])), onMouseleave: v[1] || (v[1] = ei(() => h(!1), ["prevent"])), onClick: ei(p, ["prevent"]) }, [(tt(), kt("svg", { ref_key: "$svg", ref: n, width: "200px", height: "200px", viewBox: "0 0 200 200", "enable-background": "new 0 0 200 200", "xml:space": "preserve" }, [Ae("path", { ref_key: "$path", ref: i, class: "path", fill: "#fff", "fill-op
